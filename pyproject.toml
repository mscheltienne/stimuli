[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 64.0.0']

[project]
authors = [
  {email = 'mathieu.scheltienne@gmail.com', name = 'Mathieu Scheltienne'},
]
classifiers = [
  'Intended Audience :: Developers',
  'Intended Audience :: Science/Research',
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Operating System :: MacOS',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: Unix',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Topic :: Scientific/Engineering',
  'Topic :: Software Development',
]
dependencies = [
  'click',
  'matplotlib',
  'numpy>=1.23',
  'packaging',
  'psutil',
  'scipy',
  'sounddevice',
]
description = 'Precise auditory stimuli.'
keywords = [
  'audio',
  'auditory',
  'python',
  'stimuli',
  'trigger',
]
license = {file = 'LICENSE'}
maintainers = [
  {email = 'mathieu.scheltienne@gmail.com', name = 'Mathieu Scheltienne'},
]
name = 'stimuli'
readme = 'README.md'
requires-python = '>=3.11'
version = '1.0.2'

[project.optional-dependencies]
all = [
  'stimuli[build]',
  'stimuli[doc]',
  'stimuli[lsl]',
  'stimuli[pport]',
  'stimuli[style]',
  'stimuli[test]',
]
build = [
  'build',
  'twine',
]
doc = [
  'furo',
  'intersphinx_registry>=0.2410.1',
  'matplotlib',
  'memory-profiler',
  'numpydoc',
  'sphinx',
  'sphinx-copybutton',
  'sphinx-design',
  'sphinx-gallery',
  'sphinx-issues',
  'sphinxcontrib-bibtex',
]
full = [
  'stimuli[all]',
]
lsl = [
  'mne_lsl>=1.5.0',
]
pport = [
  'pyparallel; sys_platform == "linux"',
  'pyserial',
]
style = [
  'bibclean',
  'codespell[toml]>=2.2.4',
  'pre-commit',
  'ruff>=0.6.0',
  'toml-sort',
  'yamllint',
]
test = [
  'pytest-cov',
  'pytest-timeout',
  'pytest>=8.0.0',
  'stimuli[lsl]',
  'stimuli[pport]',
]

[project.scripts]
stimuli = 'stimuli.commands.main:run'

[project.urls]
documentation = 'https://mscheltienne.github.io/stimuli/'
source = 'https://github.com/mscheltienne/stimuli'
tracker = 'https://github.com/mscheltienne/stimuli/issues'

[tool.codespell]
check-filenames = true
check-hidden = true
ignore-words = '.codespellignore'
skip = 'build,.git,.mypy_cache,.pytest_cache,.venv'

[tool.coverage.report]
exclude_lines = [
  'if __name__ == .__main__.:',
  'if TYPE_CHECKING:',
  'pragma: no cover',
]
precision = 2

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
  '**/__init__.py',
  '**/conftest.py',
  '**/stimuli/_version.py',
  '**/stimuli/trigger/io/**',
  '**/stimuli/utils/_fixes.py',
  '**/tests/**',
]

[tool.pytest.ini_options]
addopts = ['--color=yes', '--cov-report=', '--durations=20', '--junit-xml=junit-results.xml', '--strict-config', '--tb=short', '-ra', '-v']
junit_family = 'xunit2'
minversion = '8.0'

[tool.ruff]
extend-exclude = ['stimuli/trigger/io']
line-length = 88

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = []
select = ['A', 'B', 'D', 'E', 'F', 'G', 'I', 'LOG', 'NPY', 'PIE', 'PT', 'T20', 'UP', 'W']

[tool.ruff.lint.per-file-ignores]
'*' = [
  'B904', # 'Within an except clause, raise exceptions with raise ... from ...'
  'D100', # 'Missing docstring in public module'
  'D104', # 'Missing docstring in public package'
  'D107', # 'Missing docstring in __init__'
]
'*.pyi' = ['E501']
'__init__.py' = ['F401']
'tutorials/*' = ['D205', 'D400', 'T201']

[tool.ruff.lint.pydocstyle]
convention = 'numpy'
ignore-decorators = ["stimuli.utils._docs.copy_doc"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
exclude = ['stimuli*tests']
include = ['stimuli*']

[tool.tomlsort]
all = true
ignore_case = true
trailing_comma_inline_array = true
